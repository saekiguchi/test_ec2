<?php

namespace ContainerXhVx8uS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getComposerApiServiceService extends Eccube_KernelProdContainer
{
    /*
     * Gets the public 'Eccube\Service\Composer\ComposerApiService' shared autowired service.
     *
     * @return \Eccube\Service\Composer\ComposerApiService
     */
    public static function do($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->services['Eccube\\Service\\Composer\\ComposerApiService'] = $container->createProxy('ComposerApiServiceGhost75e31b6', static fn () => \ComposerApiServiceGhost75e31b6::createLazyGhost(static fn ($proxy) => self::do($container, $proxy)));
        }

        include_once \dirname(__DIR__, 4).'/src/Eccube/Service/Composer/ComposerServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Eccube/Service/Composer/ComposerApiService.php';

        return ($lazyLoad->__construct(($container->services['Eccube\\Common\\EccubeConfig'] ?? self::getEccubeConfigService($container)), ($container->privates['Eccube\\Repository\\BaseInfoRepository'] ?? self::getBaseInfoRepositoryService($container)), ($container->privates['Eccube\\Service\\SchemaService'] ?? $container->load('getSchemaServiceService')), ($container->privates['Eccube\\Service\\PluginContext'] ?? $container->load('getPluginContextService'))) && false ?: $lazyLoad);
    }
}
