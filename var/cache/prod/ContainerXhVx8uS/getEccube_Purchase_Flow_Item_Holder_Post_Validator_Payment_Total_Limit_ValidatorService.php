<?php

namespace ContainerXhVx8uS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getEccube_Purchase_Flow_Item_Holder_Post_Validator_Payment_Total_Limit_ValidatorService extends Eccube_KernelProdContainer
{
    /*
     * Gets the private 'eccube.purchase.flow.item.holder.post.validator.payment.total.limit.validator' shared service.
     *
     * @return \Eccube\Service\PurchaseFlow\Processor\PaymentTotalLimitValidator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/Eccube/Service/PurchaseFlow/ValidatorTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Eccube/Service/PurchaseFlow/ItemHolderPostValidator.php';
        include_once \dirname(__DIR__, 4).'/src/Eccube/Service/PurchaseFlow/Processor/PaymentTotalLimitValidator.php';

        return $container->privates['eccube.purchase.flow.item.holder.post.validator.payment.total.limit.validator'] = new \Eccube\Service\PurchaseFlow\Processor\PaymentTotalLimitValidator(($container->services['Eccube\\Common\\EccubeConfig'] ?? self::getEccubeConfigService($container)));
    }
}
